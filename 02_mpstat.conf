#### Logstash Conf for Exaw IoStat
#### Author   Date
#    =================================================================
#    dongwkim 2017/03/01 Create
#    dongwkim 2017/04/08 Enable Multiline
#    dongwkim 2017/04/11 Split intput by source, Need to split by type

filter {

### MPSTAT Parse
if [path] == "/es/archive/mpstat.log" {

    if [message] !~ /^([0-9]|Linux|\#\sStarting)/ {
        drop { }
    }
    mutate {
        add_field => { "taskId" => "MpStat" }
    }
    grok {
        patterns_dir => "./patterns"
        match => { "message" => "Linux%{SPACE}%{GREEDYDATA:kernel}%{SPACE}\(%{GREEDYDATA:hostname}\)%{SPACE}%{DATE_US:logdaysimple}" }
        add_tag => ["hostname_line"]
    }
    grok {
        patterns_dir => "./patterns"
        match => { "message" => "\#\sStarting\sTime:%{SPACE}%{DATE_US:logday} %{GREEDYDATA:inittime}" }
        add_tag => ["logday_line"]
    }
    if "hostname_line" in [tags] {
        aggregate {
            task_id => "%{taskId}"
            code => "map['hostname'] = event.get('hostname')"
        }
        drop { }
    }
    else if "logday_line" in [tags] {
        aggregate {
            task_id => "%{taskId}"
            code => "map['logday'] = event.get('logday')"
        }
#        drop { }
    }
    else {
        grok {
            patterns_dir => "./patterns"
            match => { "message" => "%{GREEDYDATA:logtime}%{SPACE}all%{SPACE}%{NUMBER:user}%{SPACE}%{NUMBER:nice}%{SPACE}%{NUMBER:sys}%{SPACE}%{NUMBER:iowait}%{SPACE}%{NUMBER:irq}%{SPACE}%{NUMBER:soft}%{SPACE}%{NUMBER:steal}%{SPACE}%{NUMBER:idle}%{SPACE}%{NUMBER:intr}" }
            tag_on_failure => ["candidate_to_drop"]
        }
        if "candidate_to_drop" in [tags] {
            drop { }
        }
        aggregate {
            task_id => "%{taskId}"
            code =>  "event.set('logday', map['logday'])"
            map_action => "update"
        }
        aggregate {
            task_id => "%{taskId}"
            code => "event.set('hostname', map['hostname'])" 
            map_action => "update"
        }
        mutate {
            convert => { "user" => "float" }
            convert => { "nice" => "float" }
            convert => { "sys" => "float" }
            convert => { "iowait" => "float" }
            convert => { "irq" => "float" }
            convert => { "soft" => "float" }
            convert => { "steal" => "float" }
            convert => { "idle" => "float" }
            convert => { "intr" => "float" }
            strip => [ "logtime" ]
            add_field => { "timestamp" => "%{logday} %{logtime} +0900" }
        }
    }
    date {
        match => [ "timestamp","MM/dd/yyyy HH:mm:ss Z" ]
        target => "@timestamp"
    }
  }
}

